
{	
	"_comment":"You have available the jsonData which is the response text to the HTTP request and dp as a ISO 8601 format parser.With will be added a postriori the time of the reading and the geolocation of the user. In dependencies must be all the devices and external apis supported by the system, how to reach them, the headers if necessary, how to get the important data as well as the time interval each metric should obey.",
	"gps":{	
		"url":"localhost:5555",
		"header":"{}",
		"getData":"[jsonData[\"data\"][\"lat\"],jsonData[\"data\"][\"longi\"]]",
		"updateTime":10
	},
	"externalAPI":{
		"WAQI":{
			"type":"Environment",
			"url":"https://api.waqi.info/feed/geo:VARIABLE_LATITUDE;VARIABLE_LONGITUDE/?token=453f8f3898bd238302fe5f84e3526a90c5da9496",
			"savingTime":0,
			"getData":"dict({metric:jsonData[\"data\"][\"iaqi\"][metric][\"v\"] for metric in jsonData[\"data\"][\"iaqi\"]}, **{\"aqi\":jsonData[\"data\"][\"aqi\"]})",
			"saveCondition":""
		}
	},
	"devices": {
		"FitBit":{
			"header":"{\"Authorization\": \"Bearer VARIABLE_TOKEN}",
			"metrics":{
				"HeartRate":{
					"type":"HealthStatus",
					"url":"https://api.fitbit.com/1/user/-/activities/heart/date/today/1d.json",
					"updateTime":5,
					"savingTime":120,
					"getData":"{\"heartRate\":jsonData[\"restingHeartRate\"]}",
					"saveCondition":"jsonData[\"restingHeartRate\"]>100 or jsonData[\"restingHeartRate\"]<60 "
				},
				"Sleep":{
					"type":"Sleep",
					"url":"https://api.fitbit.com/1.2/user/-/sleep/date/today.json",
					"updateTime":1440,
					"savingTime":1440,
					"getData":"{\"duration\":jsonData[\"sleep\"][0][\"duration\"], \"startTime\":int(dp.parse(jsonData[\"sleep\"][0][\"startTime\"]+\"Z\").strftime(\"%s\")), \"endTime\":int(dp.parse(jsonData[\"sleep\"][0][\"endTime\"]+\"Z\").strftime(\"%s\")), \"sleep\":[{k if k!=\"dateTime\" else \"time\" : v if k!=\"dateTime\" else int(dp.parse(v+\"Z\").strftime(\"%s\")) for k,v in e.items()} for e in jsonData[\"sleep\"][0][\"levels\"][\"data\"]]}",
					"saveCondition":""
				},
				"Calories":{
					"type":"HealthStatus",
					"url":"https://api.fitbit.com/1/user/-/activities/heart/date/today/1d.json",
					"updateTime":360,
					"savingTime":720,
					"getData":"{\"calories\":sum([zone[\"caloriesOut\"] for zone in jsonData[\"activities-heart\"][0][\"value\"][\"heartRateZones\"]])}",
					"saveCondition":""
				},
				"Activity":{
					"type":"HealthStatus",
					"url":"https://api.fitbit.com/1/user/-/activities/date/today.json",
					"updateTime":360,
					"savingTime":720,
					"getData":"{\"fairlyActiveMinutes\":jsonData[\"summary\"][\"fairlyActiveMinutes\"], \"lightlyActiveMinutes\":jsonData[\"summary\"][\"lightlyActiveMinutes\"], \"sedentaryMinutes\":jsonData[\"summary\"][\"sedentaryMinutes\"], \"veryActiveMinutes\":jsonData[\"summary\"][\"veryActiveMinutes\"]}",
					"saveCondition":""
				},
				"Steps":{
					"type":"HealthStatus",
					"url":"https://api.fitbit.com/1/user/-/activities/date/today.json",
					"updateTime":360,
					"savingTime":720,
					"getData":"{\"steps\":jsonData[\"summary\"][\"steps\"]}",
					"saveCondition":""
				}
			}
		},
		"Foobot":{
			"header":"{\"Accept\":\"application/json;charset=UTF-8\",\"X-API-KEY-TOKEN\":\"VARIABLE_TOKEN\"}",
			"metrics":{
				"Foobot":{
					"type":"Environment",
					"url":"http://api.foobot.io/v2/device/VARIABLE_UUID/datapoint/10/last/0/",
					"updateTime":0,
					"savingTime":0,
					"getData":"{metric:value for metric, value in zip(jsonData[\"sensors\"], jsonData[\"datapoints\"][0])]}",
					"saveCondition":""
				}
			}
		}
	}
}